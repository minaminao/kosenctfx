// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package main

import (
	"time"
)

type Node interface {
	IsNode()
}

type Attachment struct {
	Name string `json:"name"`
	URL  string `json:"url"`
}

type Challenge struct {
	ID          string        `json:"id"`
	Name        string        `json:"name"`
	Flag        *string       `json:"flag"`
	Description string        `json:"description"`
	Author      string        `json:"author"`
	Score       int           `json:"score"`
	Tags        []string      `json:"tags"`
	Attachments []*Attachment `json:"attachments"`
	SolvedBy    []*Team       `json:"solvedBy"`
	IsOpen      bool          `json:"isOpen"`
	IsSurvey    bool          `json:"isSurvey"`
}

func (Challenge) IsNode() {}

type PaginationInput struct {
	Offset int `json:"offset"`
	Limit  int `json:"limit"`
}

type Submission struct {
	ID          string     `json:"id"`
	Team        *Team      `json:"team"`
	Flag        string     `json:"flag"`
	Challenge   *Challenge `json:"challenge"`
	IsCorrect   bool       `json:"isCorrect"`
	IsValid     bool       `json:"isValid"`
	SubmittedAt time.Time  `json:"submittedAt"`
}

func (Submission) IsNode() {}

type Team struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Email       *string `json:"email"`
	CountryCode string  `json:"countryCode"`
	IsAdmin     bool    `json:"isAdmin"`
}

func (Team) IsNode() {}
