version: '3'
services:
  db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: kosenctfx
      MYSQL_USER: kosenctfxuser
      MYSQL_PASSWORD: kosenctfxpassword
      MYSQL_ROOT_PASSWORD: rootpassword

    command: mysqld --general-log=1 --general-log-file=/var/lib/mysql/general-query.log

  redis:
    image: redis:5.0.7-alpine

  adminer:
    image: adminer
    ports:
      - "8080:8080"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "8000:80"
      - "5000:5000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: ["server", "/data"]

  scoreserver:
    build:
      context: scoreserver
      dockerfile: Dockerfile.dev
    environment:
      DBDSN: 'kosenctfxuser:kosenctfxpassword@tcp(db:3306)/kosenctfx'
      REDIS: 'redis://redis:6379'
      FRONT: 'http://localhost:8080'
      MAIL: 'kosenctf@example.com'
      MAIL_SERVER: 'smtp.gmail.com:587'
      MAIL_PASSWORD: 'XXXXXXXXXXXXXXXXXX'
      ADMIN_WEBHOOK: 'https://discord.com/api/webhooks/XXXXX/XXXXX'
      SYSTEM_WEBHOOK: 'https://discord.com/api/webhooks/XXXXX/XXXXX'
      BUCKET_ENDPOINT: "localhost:9000"
      BUCKET_REGION: "us-east-1"
      BUCKET_ACCESS_KEY: "minio"
      BUCKET_SECRET_KEY: "minio123"
      BUCKET_NAME: "kosenctfx-challenges"
      BUCKET_INSECURE: "1"
    depends_on:
      - minio
    network_mode: "service:minio"
    command: >
      reflex -r '\.go$$' -s -- sh -c '/wayt sql -dsn "$$DBDSN" && go run main.go'
    volumes:
      - ./scoreserver:/scoreserver

  ui:
    build:
      context: ui
      dockerfile: Dockerfile.dev
    network_mode: "service:minio"
    depends_on:
      - minio
    volumes:
      - ./ui/dist:/usr/share/nginx/html:ro
